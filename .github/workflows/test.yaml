---
name: test

on: ["push", "pull_request"]

env:
  GO_VERSION: "1.19"
  LINUX_ARCHES: "amd64 386 arm arm64 s390x mips64le ppc64le"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - uses: ibiqlik/action-yamllint@v3
        with:
          format: auto
      - uses: golangci/golangci-lint-action@v3
  build:
    name: Build all linux architectures
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3

      - name: Build on all supported architectures
        run: |
          set -e
          for arch in ${LINUX_ARCHES}; do
            echo "Building for arch $arch"
            GOARCH=$arch go build ./...
          done

  test-linux:
    name: Run tests on Linux amd64
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3

      - name: Install test binaries
        env:
          GO111MODULE: off
        run: |
          go get github.com/mattn/goveralls
          go get github.com/modocache/gover

      - name: test
        run: COVERALLS=1 ./test.sh

      - name: Send coverage to coveralls
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PATH=$PATH:$(go env GOPATH)/bin
          gover
          goveralls -coverprofile=gover.coverprofile -service=github

  test-win:
    name: Build and run tests on Windows
    needs: build
    runs-on: windows-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: test
        run: bash ./test.sh
